class x extends TypeError{constructor(r,n){let t;const{message:i,explanation:s,...f}=r,{path:a}=r,o=a.length===0?i:`At path: ${a.join(".")} -- ${i}`;super(s??o),s!=null&&(this.cause=o),Object.assign(this,f),this.name=this.constructor.name,this.failures=()=>t??(t=[r,...n()])}}function E(e){return p(e)&&typeof e[Symbol.iterator]=="function"}function p(e){return typeof e=="object"&&e!=null}function m(e){return p(e)&&!Array.isArray(e)}function d(e){return typeof e=="symbol"?e.toString():typeof e=="string"?JSON.stringify(e):`${e}`}function j(e){const{done:r,value:n}=e.next();return r?void 0:n}function N(e,r,n,t){if(e===!0)return;e===!1?e={}:typeof e=="string"&&(e={message:e});const{path:i,branch:s}=r,{type:f}=n,{refinement:a,message:o=`Expected a value of type \`${f}\`${a?` with refinement \`${a}\``:""}, but received: \`${d(t)}\``}=e;return{value:t,type:f,refinement:a,key:i[i.length-1],path:i,branch:s,...e,message:o}}function*$(e,r,n,t){E(e)||(e=[e]);for(const i of e){const s=N(i,r,n,t);s&&(yield s)}}function*g(e,r,n={}){const{path:t=[],branch:i=[e],coerce:s=!1,mask:f=!1}=n,a={path:t,branch:i,mask:f};s&&(e=r.coercer(e,a));let o="valid";for(const c of r.validator(e,a))c.explanation=n.message,o="not_valid",yield[c,void 0];for(let[c,u,A]of r.entries(e,a)){const k=g(u,A,{path:c===void 0?t:[...t,c],branch:c===void 0?i:[...i,u],coerce:s,mask:f,message:n.message});for(const b of k)b[0]?(o=b[0].refinement!=null?"not_refined":"not_valid",yield[b[0],void 0]):s&&(u=b[1],c===void 0?e=u:e instanceof Map?e.set(c,u):e instanceof Set?e.add(u):p(e)&&(u!==void 0||c in e)&&(e[c]=u))}if(o!=="not_valid")for(const c of r.refiner(e,a))c.explanation=n.message,o="not_refined",yield[c,void 0];o==="valid"&&(yield[void 0,e])}class y{constructor(r){const{type:n,schema:t,validator:i,refiner:s,coercer:f=o=>o,entries:a=function*(){}}=r;this.type=n,this.schema=t,this.entries=a,this.coercer=f,i?this.validator=(o,c)=>{const u=i(o,c);return $(u,c,this,o)}:this.validator=()=>[],s?this.refiner=(o,c)=>{const u=s(o,c);return $(u,c,this,o)}:this.refiner=()=>[]}assert(r,n){return O(r,this,n)}create(r,n){return S(r,this,n)}is(r){return w(r,this)}mask(r,n){return _(r,this,n)}validate(r,n={}){return h(r,this,n)}}function O(e,r,n){const t=h(e,r,{message:n});if(t[0])throw t[0]}function S(e,r,n){const t=h(e,r,{coerce:!0,message:n});if(t[0])throw t[0];return t[1]}function _(e,r,n){const t=h(e,r,{coerce:!0,mask:!0,message:n});if(t[0])throw t[0];return t[1]}function w(e,r){return!h(e,r)[0]}function h(e,r,n={}){const t=g(e,r,n),i=j(t);return i[0]?[new x(i[0],function*(){for(const f of t)f[0]&&(yield f[0])}),void 0]:[void 0,i[1]]}function l(e,r){return new y({type:e,schema:null,validator:r})}function I(){return l("any",()=>!0)}function M(e){return new y({type:"array",schema:e,*entries(r){if(e&&Array.isArray(r))for(const[n,t]of r.entries())yield[n,t,e]},coercer(r){return Array.isArray(r)?r.slice():r},validator(r){return Array.isArray(r)||`Expected an array value, but received: ${d(r)}`}})}function J(){return l("boolean",e=>typeof e=="boolean")}function T(e){return l("instance",r=>r instanceof e||`Expected a \`${e.name}\` instance, but received: ${d(r)}`)}function q(e){const r=d(e),n=typeof e;return new y({type:"literal",schema:n==="string"||n==="number"||n==="boolean"?e:null,validator(t){return t===e||`Expected the literal \`${r}\`, but received: ${d(t)}`}})}function F(){return l("never",()=>!1)}function z(e){return new y({...e,validator:(r,n)=>r===null||e.validator(r,n),refiner:(r,n)=>r===null||e.refiner(r,n)})}function B(){return l("number",e=>typeof e=="number"&&!isNaN(e)||`Expected a number, but received: ${d(e)}`)}function D(e){return new y({...e,validator:(r,n)=>r===void 0||e.validator(r,n),refiner:(r,n)=>r===void 0||e.refiner(r,n)})}function G(e,r){return new y({type:"record",schema:null,*entries(n){if(p(n))for(const t in n){const i=n[t];yield[t,t,e],yield[t,i,r]}},validator(n){return m(n)||`Expected an object, but received: ${d(n)}`},coercer(n){return m(n)?{...n}:n}})}function H(){return l("string",e=>typeof e=="string"||`Expected a string, but received: ${d(e)}`)}function K(e){const r=F();return new y({type:"tuple",schema:null,*entries(n){if(Array.isArray(n)){const t=Math.max(e.length,n.length);for(let i=0;i<t;i++)yield[i,n[i],e[i]||r]}},validator(n){return Array.isArray(n)||`Expected an array, but received: ${d(n)}`},coercer(n){return Array.isArray(n)?n.slice():n}})}function L(e){const r=Object.keys(e);return new y({type:"type",schema:e,*entries(n){if(p(n))for(const t of r)yield[t,n[t],e[t]]},validator(n){return m(n)||`Expected an object, but received: ${d(n)}`},coercer(n){return m(n)?{...n}:n}})}function P(e){const r=e.map(n=>n.type).join(" | ");return new y({type:"union",schema:null,coercer(n,t){for(const i of e){const[s,f]=i.validate(n,{coerce:!0,mask:t.mask});if(!s)return f}return n},validator(n,t){const i=[];for(const s of e){const[...f]=g(n,s,t),[a]=f;if(a[0])for(const[o]of f)o&&i.push(o);else return[]}return[`Expected the value to satisfy a union of \`${r}\`, but received: ${d(n)}`,...i]}})}function Q(){return l("unknown",()=>!0)}function R(e,r,n){return new y({...e,coercer:(t,i)=>w(t,r)?e.coercer(n(t,i),i):e.coercer(t,i)})}export{M as a,L as b,R as c,B as d,J as e,Q as f,I as g,S as h,T as i,q as l,z as n,D as o,G as r,H as s,K as t,P as u};
